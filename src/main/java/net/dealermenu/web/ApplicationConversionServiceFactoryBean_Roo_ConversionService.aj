// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package net.dealermenu.web;

import net.dealermenu.domain.Dealerinformation;
import net.dealermenu.domain.Product;
import net.dealermenu.domain.ProductCategory;
import net.dealermenu.domain.Template;
import net.dealermenu.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Dealerinformation, String> ApplicationConversionServiceFactoryBean.getDealerinformationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<net.dealermenu.domain.Dealerinformation, java.lang.String>() {
            public String convert(Dealerinformation dealerinformation) {
                return new StringBuilder().append(dealerinformation.getDealerName()).append(' ').append(dealerinformation.getStatus()).append(' ').append(dealerinformation.getMailId()).append(' ').append(dealerinformation.getMobile()).toString();
            }
        };
    }
    
    public Converter<Long, Dealerinformation> ApplicationConversionServiceFactoryBean.getIdToDealerinformationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, net.dealermenu.domain.Dealerinformation>() {
            public net.dealermenu.domain.Dealerinformation convert(java.lang.Long id) {
                return Dealerinformation.findDealerinformation(id);
            }
        };
    }
    
    public Converter<String, Dealerinformation> ApplicationConversionServiceFactoryBean.getStringToDealerinformationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, net.dealermenu.domain.Dealerinformation>() {
            public net.dealermenu.domain.Dealerinformation convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Dealerinformation.class);
            }
        };
    }
    
    public Converter<Product, String> ApplicationConversionServiceFactoryBean.getProductToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<net.dealermenu.domain.Product, java.lang.String>() {
            public String convert(Product product) {
                return new StringBuilder().append(product.getProductName()).append(' ').append(product.getProvider()).append(' ').append(product.getDescription()).append(' ').append(product.getMaxPrice()).toString();
            }
        };
    }
    
    public Converter<Long, Product> ApplicationConversionServiceFactoryBean.getIdToProductConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, net.dealermenu.domain.Product>() {
            public net.dealermenu.domain.Product convert(java.lang.Long id) {
                return Product.findProduct(id);
            }
        };
    }
    
    public Converter<String, Product> ApplicationConversionServiceFactoryBean.getStringToProductConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, net.dealermenu.domain.Product>() {
            public net.dealermenu.domain.Product convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Product.class);
            }
        };
    }
    
    public Converter<ProductCategory, String> ApplicationConversionServiceFactoryBean.getProductCategoryToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<net.dealermenu.domain.ProductCategory, java.lang.String>() {
            public String convert(ProductCategory productCategory) {
                return new StringBuilder().append(productCategory.getProductCategory()).toString();
            }
        };
    }
    
    public Converter<Long, ProductCategory> ApplicationConversionServiceFactoryBean.getIdToProductCategoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, net.dealermenu.domain.ProductCategory>() {
            public net.dealermenu.domain.ProductCategory convert(java.lang.Long id) {
                return ProductCategory.findProductCategory(id);
            }
        };
    }
    
    public Converter<String, ProductCategory> ApplicationConversionServiceFactoryBean.getStringToProductCategoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, net.dealermenu.domain.ProductCategory>() {
            public net.dealermenu.domain.ProductCategory convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ProductCategory.class);
            }
        };
    }
    
    public Converter<Template, String> ApplicationConversionServiceFactoryBean.getTemplateToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<net.dealermenu.domain.Template, java.lang.String>() {
            public String convert(Template template) {
                return new StringBuilder().append(template.getCreatedBy()).append(' ').append(template.getTemplateName()).append(' ').append(template.getType()).toString();
            }
        };
    }
    
    public Converter<Long, Template> ApplicationConversionServiceFactoryBean.getIdToTemplateConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, net.dealermenu.domain.Template>() {
            public net.dealermenu.domain.Template convert(java.lang.Long id) {
                return Template.findTemplate(id);
            }
        };
    }
    
    public Converter<String, Template> ApplicationConversionServiceFactoryBean.getStringToTemplateConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, net.dealermenu.domain.Template>() {
            public net.dealermenu.domain.Template convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Template.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getDealerinformationToStringConverter());
        registry.addConverter(getIdToDealerinformationConverter());
        registry.addConverter(getStringToDealerinformationConverter());
        registry.addConverter(getProductToStringConverter());
        registry.addConverter(getIdToProductConverter());
        registry.addConverter(getStringToProductConverter());
        registry.addConverter(getProductCategoryToStringConverter());
        registry.addConverter(getIdToProductCategoryConverter());
        registry.addConverter(getStringToProductCategoryConverter());
        registry.addConverter(getTemplateToStringConverter());
        registry.addConverter(getIdToTemplateConverter());
        registry.addConverter(getStringToTemplateConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
